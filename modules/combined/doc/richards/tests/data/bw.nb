(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[     24614,        544]
NotebookOptionsPosition[     23979,        517]
NotebookOutlinePosition[     24342,        533]
CellTagsIndexPosition[     24299,        530]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"SetDirectory", "[", "\"\<L:/moose/project2/trunk/elk\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.597620705997557*^9, 3.597620727705237*^9}}],

Cell[BoxData["\<\"L:\\\\moose\\\\project2\\\\trunk\\\\elk\"\>"], "Output",
 CellChangeTimes->{3.597620728110399*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "f", ",", "u", ",", "uprime", ",", "zstar", ",", "theta", ",", "tau", ",", 
    "z"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kn", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ks", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"deltaK", "=", 
   RowBox[{"ks", "-", "kn"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"thn", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ths", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"deltatheta", "=", 
   RowBox[{"ths", "-", "thn"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cc", " ", "=", " ", "1.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"las", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rr", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rrstar", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"rr", "-", "kn"}], ")"}], "/", "deltaK"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m", "=", 
   RowBox[{"4", "cc", 
    RowBox[{"(", 
     RowBox[{"cc", "-", "1"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rho", "=", 
   RowBox[{"rrstar", "/", "m"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ts", "=", 
    RowBox[{"las", "*", 
     RowBox[{"deltatheta", "/", "deltaK"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"f", "[", "x_", "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"Exp", "[", 
      RowBox[{"x", "^", "2"}], "]"}], 
     RowBox[{"Erfc", "[", "x", "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"u", "[", 
    RowBox[{"zeta_", ",", "tau_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "/", "2"}], ")"}], 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"zeta", "^", "2"}]}], "/", "tau"}], "]"}], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"zeta", "+", 
             RowBox[{"rho", "*", "tau"}]}], ")"}], "/", 
           RowBox[{"Sqrt", "[", "tau", "]"}]}], ")"}], "^", "2"}], "]"}]}], 
      " ", "+", " ", 
      RowBox[{"f", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"zeta", "-", 
          RowBox[{"rho", "*", 
           RowBox[{"Sqrt", "[", 
            RowBox[{"1", "+", 
             RowBox[{"1", "/", "rho"}]}], "]"}], "*", "tau"}]}], ")"}], "/", 
        RowBox[{"Sqrt", "[", "tau", "]"}]}], "]"}], "-", 
      RowBox[{"f", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"zeta", "-", 
          RowBox[{"rho", " ", "tau"}]}], ")"}], "/", 
        RowBox[{"Sqrt", "[", "tau", "]"}]}], "]"}], " ", "+", " ", 
      RowBox[{"f", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"zeta", "+", 
          RowBox[{"rho", "*", 
           RowBox[{"Sqrt", "[", 
            RowBox[{"1", "+", 
             RowBox[{"1", "/", "rho"}]}], "]"}], "*", "tau"}]}], ")"}], "/", 
        RowBox[{"Sqrt", "[", "tau", "]"}]}], "]"}], "-", 
      RowBox[{"f", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"zeta", "+", 
          RowBox[{"rho", " ", "tau"}]}], ")"}], "/", 
        RowBox[{"Sqrt", "[", "tau", "]"}]}], "]"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"uprime", "[", 
     RowBox[{"zeta_", ",", "tau_"}], "]"}], ":=", 
    RowBox[{"Evaluate", "[", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"u", "[", 
         RowBox[{"z", ",", "tau"}], "]"}], ",", "z"}], "]"}], "/.", 
      RowBox[{"z", "\[Rule]", "zeta"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"zstar", "[", 
    RowBox[{"zeta_", ",", "tau_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "/", "cc"}], ")"}], "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"rho", "^", "2"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"1", "/", "rho"}]}], ")"}], " ", "tau"}], " ", "+", " ", 
      RowBox[{"rho", " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", 
         RowBox[{"1", "/", "rho"}]}], ")"}], " ", "zeta"}], " ", "-", " ", 
      RowBox[{"Log", "[", 
       RowBox[{"u", "[", 
        RowBox[{"zeta", ",", "tau"}], "]"}], "]"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"theta", "[", 
     RowBox[{"zeta_", ",", "tau_"}], "]"}], ":=", 
    RowBox[{"cc", "*", 
     RowBox[{"(", 
      RowBox[{"1", " ", "-", " ", 
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", "rho"}], "+", "1", "-", 
          RowBox[{
           RowBox[{"uprime", "[", 
            RowBox[{"zeta", ",", "tau"}], "]"}], "/", 
           RowBox[{"u", "[", 
            RowBox[{"zeta", ",", "tau"}], "]"}]}]}], ")"}]}]}], ")"}]}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tau", "[", "t_", "]"}], " ", ":=", " ", 
   RowBox[{"m", "*", 
    RowBox[{"t", "/", "ts"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"z", "[", 
    RowBox[{"zeta_", ",", "tau_"}], "]"}], " ", ":=", " ", 
   RowBox[{"las", "*", 
    RowBox[{"zstar", "[", 
     RowBox[{"zeta", ",", "tau"}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.5976183856363554`*^9, 3.597618921679103*^9}, {
  3.597618962095545*^9, 3.5976189726602073`*^9}, {3.5976191367515755`*^9, 
  3.597619199505205*^9}, {3.5976192429352474`*^9, 3.597619271048105*^9}, {
  3.5976193290138636`*^9, 3.5976193885254383`*^9}, {3.597619491277523*^9, 
  3.5976195501370573`*^9}, {3.5976196127600965`*^9, 3.597619631971778*^9}, {
  3.597619902276848*^9, 3.597619908228388*^9}, {3.597620098078994*^9, 
  3.5976200981781025`*^9}, {3.597620282974236*^9, 3.597620341872554*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ans", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"theta", "[", 
        RowBox[{"#", ",", 
         RowBox[{"tau", "[", "8", "]"}]}], "]"}], ",", 
       RowBox[{"z", "[", 
        RowBox[{"#", ",", 
         RowBox[{"tau", "[", "8", "]"}]}], "]"}]}], "}"}], "&"}], "/@", 
    RowBox[{"Range", "[", 
     RowBox[{"0", ",", "7", ",", "0.01"}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.5976195658103237`*^9, 3.597619566843737*^9}, {
   3.597619602031807*^9, 3.597619609731886*^9}, {3.5976197016727877`*^9, 
   3.597619765608963*^9}, {3.59761989218576*^9, 3.5976198981583223`*^9}, 
   3.5976199514658966`*^9, {3.5976200621204824`*^9, 3.597620064912551*^9}, {
   3.597620317423894*^9, 3.597620318255392*^9}, {3.5976212732315145`*^9, 
   3.59762127672661*^9}, {3.5976215144639435`*^9, 3.5976215183508863`*^9}, {
   3.597621793783388*^9, 3.597621793878426*^9}, {3.597621833433242*^9, 
   3.5976218338324013`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"ans", ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.59761976803269*^9, 3.5976197758000193`*^9}, {
  3.597619810986539*^9, 3.597619817351533*^9}, {3.5976198687450037`*^9, 
  3.5976198735552893`*^9}, {3.597619914089828*^9, 3.5976199147385406`*^9}, {
  3.5976200708680944`*^9, 3.5976200739014273`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.24720000000000014`, 0.24, 0.6], LineBox[CompressedData["
1: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
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0.00039293252181427096`, 0.},
  Method->{},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.5976197764002*^9, 3.597619824540432*^9, 3.597619878955222*^9, 
   3.597619915170015*^9, 3.5976199533099227`*^9, {3.5976200673422203`*^9, 
   3.597620101392352*^9}, 3.59762034705266*^9, 3.597621280735014*^9, 
   3.597621521516468*^9, 3.5976217957431717`*^9, 3.5976218365414844`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<doc/richards/tests/data/bw01_analytic_8.csv\>\"", ",", "ans", ",", 
   "\"\<Table\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.597620739219841*^9, 3.59762075482408*^9}, {
  3.5976208439348063`*^9, 3.5976208646244106`*^9}, {3.5976212848004513`*^9, 
  3.5976212860662107`*^9}, {3.597621527799608*^9, 3.5976215283909035`*^9}}],

Cell[BoxData["\<\"doc/richards/tests/data/bw01_analytic_8.csv\"\>"], "Output",
 CellChangeTimes->{3.5976208696649427`*^9, 3.5976212894332294`*^9, 
  3.597621529916666*^9, 3.5976218056821456`*^9, 3.597621843010071*^9}]
}, Open  ]]
},
WindowSize->{799, 867},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
ShowSelection->True,
FrontEndVersion->"9.0 for Microsoft Windows (64-bit) (January 25, 2013)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 168, 3, 31, "Input"],
Cell[750, 27, 116, 1, 31, "Output"]
}, Open  ]],
Cell[881, 31, 6053, 180, 592, "Input"],
Cell[6937, 213, 988, 22, 31, "Input"],
Cell[CellGroupData[{
Cell[7950, 239, 400, 7, 31, "Input"],
Cell[8353, 248, 14971, 250, 241, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23361, 503, 382, 7, 31, "Input"],
Cell[23746, 512, 217, 2, 88, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)

